class Solution {
    public int myAtoi(String s) {
        
        s = s.trim();
        
        boolean pos = true;
        int len = s.length();
        
        if( len >=1){
            
            if(s.charAt(0) == '+') pos = true;
            else if(s.charAt(0) == '-') pos = false;
            else pos = true;          
        } else {
            return 0;
        }       
        
        /*
        String[] arr = s.split(" ");
        
        for(String str: arr){
            
            if(isStringNumeric(str)){
                return convertToInteger(str, pos);
            } else {
                return 0;
            }
            
        }
        */
        
        return convertToInteger(s,pos);
    }
    
    boolean isStringNumeric(String str) {
        
        if(str.charAt(0) == '+' || str.charAt(0) == '-'){
            str = str.substring(1);
        }
        
         int len = str.length();
        
                
        for(int i=0;i<len;i++) { 
            
            int x = str.charAt(i) - '0';            
            if((x<0 || x>9) && !(str.charAt(i) == '.')) {
                return false;
            }          
        }
        
        return true;
    }
        
    
    
    int convertToInteger(String str, boolean pos) {
        
        
        if(str.charAt(0) == '+' || str.charAt(0) == '-'){
            str = str.substring(1);
        }
        
        int len = str.length();
        long num = 0;
                
        for(int i=0;i<len;i++) {
            
           int x = str.charAt(i) - '0';
           
           if(x>=0 && x<=9) {
               num = num*10 + x;
               
               if(num >=Integer.MAX_VALUE)break;
               
           } else {
               break;
           }         
            
           
            
        }
        
        if(num < Integer.MIN_VALUE || num >Integer.MAX_VALUE) {
            
            if(pos) return Integer.MAX_VALUE;
            
            return Integer.MIN_VALUE;
        }
        
        if(pos) return (int)num;
        
        return (int)(-1*num);
    }
}
